<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-4.1.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-4.1.xsd" >
    
   
    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器-->
    <context:component-scan base-package="com.np.atms.cms.controller"/>
    
    <!--  主要作用于@Controller，激活该模式
    	     下面是一种简写形式，完全可以手动配置替代这种简写形式；
    	     它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
    	    是spring MVC为@Controllers分发请求所必须的-->
    <!-- <mvc:annotation-driven>
	    <mvc:message-converters register-defaults="true">
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                <constructor-arg value="UTF-8"/>
	            </bean>
	            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	        </mvc:message-converters>
    </mvc:annotation-driven> -->
    
    
    <mvc:annotation-driven>
		<!-- 启动JSON格式的配置 -->
   		<mvc:message-converters>  
   		<!-- 这里也可以自己定制class -->
        <bean class="com.np.atms.cms.util.CustomerFastJsonHttpMessageConverter">  
            <property name="supportedMediaTypes">  
                <list>  
                    <value>text/html;charset=UTF-8</value>  <!-- 避免IE出现下载JSON文件的情况 -->
                    <value>text/json;charset=UTF-8</value>
                    <value>application/json;charset=UTF-8</value>                    
                </list>  
            </property>
            <property name="defaultDateFormat" value="yyyy-MM-dd HH:mm:ss"></property>  
            <!--  
			QuoteFieldNames-输出key时是否使用双引号,默认为true
			WriteMapNullValue-是否输出值为null的字段,默认为false
			WriteNullNumberAsZero-数值字段如果为null,输出为0,而非null
			WriteNullListAsEmpty-List字段如果为null,输出为[],而非null
			WriteNullStringAsEmpty-字符类型字段如果为null,输出为"",而非null
			WriteNullBooleanAsFalse-Boolean字段如果为null,输出为false,而非null 
			-->
			<property name="features">
				<list>
					<value>WriteMapNullValue</value>
					<value>WriteNullStringAsEmpty</value>
					<!--<value>QuoteFieldNames</value>-->
				</list>
			</property>  
        </bean>  
    	</mvc:message-converters>  	
   	</mvc:annotation-driven>   
    
    <!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观-->
   <!--  
   	不再拦截前端请求，操作日志由前端主动调用后台接口(/log/record)进行记录
   <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
			<bean  class="com.np.atms.cms.interceptor.LogInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>  -->
    
    <!-- 全局配置 --> 
    <!--<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
    </mvc:interceptors> -->
   
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <!-- <mvc:resources  mapping="/resources/**" location="/WEB-INF/resources/" /> -->
    
    <!-- 允许对静态资源文件的访问 -->
    <mvc:default-servlet-handler/>
    
    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    	 <property name="prefix" value="/WEB-INF/jsp/"/>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  
</beans>